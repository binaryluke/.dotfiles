" References
" https://medium.com/actualize-network/how-to-learn-vim-a-four-week-plan-cd8b376a9b85
" https://dougblack.io/words/a-good-vimrc.html

" ======================================== "
"
" Install Plugins
"
" ======================================== "
call plug#begin('~/.vim/plugged')
  Plug 'editorconfig/editorconfig-vim'
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'vimwiki/vimwiki'
  Plug 'tpope/vim-fugitive'
call plug#end()

" ======================================== "
"
" Editing
"
" ======================================== "
let mapleader="," " leader is comma

syntax enable " enable syntax processing
colorscheme codedark " ~/.vim/colors/codedark.vim

set tabstop=2 " number of visual spaces per tab
set softtabstop=2 " number of spaces in tab when editing
set shiftwidth=0 " setting zero causes vim to use the tabstop value instead
set expandtab " tabs are spaces

set number " show line numbers

set incsearch " search as characters are entered
set hlsearch " highlight matches

set scrolloff=4 " Always keep a few lines above/below cursor at top/bottom of file

set showcmd " Show the keystrokes in statusbar when in normal mode

set clipboard=unnamed " use system clipboard

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" split navigation and sizing
set splitbelow
set splitright
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

" browse recent files
"   then press q followed by number to open
nnoremap <leader>r :browse oldfiles<CR>

" Open relative to current file
nnoremap <leader>e :e %:h
nnoremap <leader>s :sp %:h
nnoremap <leader>v :vsp %:h

" ======================================== "
"
" FileType gitcommit
"
" ======================================== "
autocmd FileType gitcommit set textwidth=72 " auto wrap
autocmd FileType gitcommit set colorcolumn=51 " for titles
autocmd FileType gitcommit set colorcolumn+=73 " for body

" ======================================== "
"
" CoC Plugin Configuration
"
" ======================================== "
let g:coc_global_extensions = [
  \ 'coc-json',
  \ 'coc-tsserver',
  \ 'coc-html',
  \ 'coc-css',
  \ 'coc-python',
  \ 'coc-snippets',
  \ 'coc-prettier',
  \ ]

" navigate auto completions with <tab> and <shift-tab>
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
" <cr> will accept the auto completion if pum open (defaults to first item), otherwise default vim
" behaviour
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm() : "\<C-g>u\<CR>"
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif

" Remap keys for gotos
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Prettier config
nnoremap <leader>p :CocCommand prettier.formatFile<CR>

" Use K to show documentation in preview window
nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction

" ======================================== "
"
" VimWiki Plugin Configuration
"
" ======================================== "

let g:vimwiki_list = [{'path': '~/vimwiki/', 'syntax': 'markdown', 'ext': '.md'}]

